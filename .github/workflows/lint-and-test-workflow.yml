name: Lint and test

# By default, runs when a pull_request's activity type is opened, synchronize,
# or reopened
on: pull_request

jobs:
  lint_and_test:
    name: Lint and test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v1.0.0
      - name: Setup node
        uses: actions/setup-node@v1
        with:
          node-version: '12.x'
      - name: Cache node_modules
        uses: actions/cache@v1
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      - name: Install
        run: npm ci

      # Run linters for js/css/markdown. These will lint the entire project.
      - name: Lint
        run: npm run lint

      # Run all unit and integration tests.
      - name: Test
        run: npm run test

      # Begin custom linters.
      # These will primarily focus on the YAML frontmatter of posts.
      # Note these linters will post their own message to the GitHub Issue
      # using the create-or-update-comment step.
      - name: Git diff
        id: git_diff
        uses: futuratrepadeira/changed-files@v3.2.1
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          pattern: '^.*\.(md)$'

      - name: Lint yaml front matter
        id: lint_front_matter
        uses: ./.github/actions/lint-front-matter
        with:
          added: ${{ steps.git_diff.outputs.files_created }}
          modified: ${{ steps.git_diff.outputs.files_updated }}
        # Only run the linter if the previous step indicated that files were
        # added or modified in the pull request.
        if: steps.git_diff.outputs.files_created || steps.git_diff.outputs.files_updated
      
      # Use a custom action to find the first comment by our GitHub Actions bot.
      # This comment id, plus the yaml test results, will get passed to the
      # final step which will post to the issue thread.
      - name: Find comment
        id: find_comment
        uses: ./.github/actions/find-comment
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
        if: always() && steps.lint_front_matter.outputs.message

      - name: Create or update comment
        uses: peter-evans/create-or-update-comment@v1.4.0
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          issue-number: ${{ github.event.number }}
          comment-id: ${{ steps.find_comment.outputs.comment-id }}
          body: |
            ${{ steps.lint_front_matter.outputs.message }}
          edit-mode: replace
        if: always() && steps.lint_front_matter.outputs.message